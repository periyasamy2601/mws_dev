pipeline {
    agent none

    environment {
        DOCKER_IMAGE       = "mwsdev2025/mws_avk_api"
        SONAR_HOST         = "http://192.168.2.20:9000"
        SONAR_PROJECT_KEY  = "mws_avk_api"
        SONAR_PROJECT_NAME = "mws_avk_api"
        DB_HOST            = "192.168.2.20"
        DB_PORT            = "5432"
        DB_NAME            = "mws_avk_api"
    }

    stages {
        stage('Checkout') {
            agent { label 'build-node' }
            steps {
                deleteDir()   // clean workspace
                git branch: 'main', url: 'https://github.com/periyasamy2601/mws_dev.git'
            }
        }

        stage('Install Dependencies') {
            agent { label 'build-node' }
            steps {
                dir('pipeline/src') {   // go to folder containing package.json
                    script {
                        if (fileExists('node_modules')) {
                            echo "Using cached node_modules"
                        } else {
                            echo "Installing npm dependencies..."
                            sh 'npm install'
                        }
                    }
                }
            }
        }

        stage('ESLint') {
            agent { label 'build-node' }
            steps {
                dir('pipeline/src') {   // ESLint also runs here
                    sh 'npx eslint . -f json -o eslint-report.json || true'
                }
            }
        }

        stage('SonarQube Scan') {
            agent { label 'build-node' }
            steps {
                dir('pipeline/src') {
                    withSonarQubeEnv('sonar scanner') {   // matches Jenkins global tool name
                        script {
                            def scannerHome = tool 'sonar scanner'
                            sh """
                                ${scannerHome}/bin/sonar-scanner \
                                    -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
                                    -Dsonar.projectName=${SONAR_PROJECT_NAME} \
                                    -Dsonar.sources=. \
                                    -Dsonar.host.url=${SONAR_HOST} \
                                    -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
                                    -Dsonar.eslint.reportPaths=eslint-report.json
                            """
                        }
                    }
                }
            }
        }
    }
}
